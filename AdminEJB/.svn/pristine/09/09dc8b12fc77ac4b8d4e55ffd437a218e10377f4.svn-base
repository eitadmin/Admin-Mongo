package com.eiw.device.ais140v2;

import java.io.DataInputStream;

import java.io.DataOutputStream;

import java.io.IOException;

import org.jboss.logging.Logger;

public class AIS140ByteWrapperV2 {

	private DataInputStream dis = null;

	private DataOutputStream dos = null;

	private String imei;

	private String rawData;

	private String[] deviceData;

	private static final Logger LOGGER = Logger.getLogger("listener");

	private AIS140GpsDataV2 ais140GpsDataV2 = new AIS140GpsDataV2();

	private Ais140HealthDataV2 ais140HealthDataV2 = new Ais140HealthDataV2();

	private int length;

	public AIS140ByteWrapperV2(DataInputStream in, DataOutputStream out) {

		this.dis = in;

		this.dos = out;

	}

	public String getImei() {

		return imei;

	}

	public void setImei(String imei) {

		this.imei = imei;

	}

	public AIS140GpsDataV2 getAis140GpsDataV2() {

		return ais140GpsDataV2;

	}

	public void setAis140GpsDataV2(AIS140GpsDataV2 ais140GpsDataV2) {

		this.ais140GpsDataV2 = ais140GpsDataV2;

	}

	public Ais140HealthDataV2 getAis140HealthDataV2() {

		return ais140HealthDataV2;

	}

	public void setAis140HealthDataV2(Ais140HealthDataV2 ais140HealthDataV2) {

		this.ais140HealthDataV2 = ais140HealthDataV2;

	}

	public String getRawData() {

		return rawData;

	}

	public void setRawData(String rawData) {

		this.rawData = rawData;

	}

	public String[] getDeviceData() {

		return deviceData;

	}

	public void setDeviceData(String[] deviceData) {

		this.deviceData = deviceData;

	}

	public void unwrapDataFromStream() throws IOException {

		try {

			LOGGER.info("Entered Ais140V2 wrapper");

			StringBuilder sb = new StringBuilder();

			while (true) {

				// String.format("%02x", this.dis.readByte());

				sb.append((char) this.dis.readByte());

				if (sb.toString().contains("*")) {

					int count = this.dis.available();

					LOGGER.info("Available = " + count);

					byte[] junk = new byte[count];

					this.dis.readFully(junk);

					break;

				}

			}

			this.rawData = sb.toString();

			LOGGER.error("Ais140V2 Data = " + this.rawData);

			this.deviceData = this.rawData.split(",");

			this.length = this.deviceData.length;

			if (this.length > 50) {

				this.imei = this.deviceData[7];

				LOGGER.info("------------ Ais140V2 basic Data ------------ ");

				this.ais140GpsDataV2.read(this.deviceData);

			} else if (deviceData[2].equalsIgnoreCase("EMR")) {

				this.imei = this.deviceData[3];

				LOGGER.info("-----------Ais140V2 basic EMR Data  -------- ");

				this.ais140GpsDataV2.reademr(this.deviceData);

			} else if (this.length == 15) {

				this.imei = this.deviceData[4];

				LOGGER.info("------------ Ais140V2 Health Data ------------ ");

				this.ais140HealthDataV2.read(this.deviceData);

			} else {

				this.imei = this.deviceData[4];

				String responce = "$,1,*";

				dos.write(responce.getBytes());

				LOGGER.info(
						"-----------Ais140V2 basic Login data Data  -------- ");

			}

		} catch (IOException e) {

			LOGGER.error("Ais140ByteWrapperV2 : " + e);

			e.printStackTrace();

			throw new IOException("Ais140ByteWrapperV2");

		}

	}

	public int getLength() {

		return length;

	}

	public void setLength(int length) {

		this.length = length;

	}

}
